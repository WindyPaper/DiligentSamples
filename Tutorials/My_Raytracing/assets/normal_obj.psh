#include "simple_obj_common.csh"

Texture3D    g_Texture;
SamplerState g_Texture_sampler; // By convention, texture samplers must use the '_sampler' suffix

struct PSInput 
{ 
    float4 Pos   : SV_POSITION; 
    float2 UV : TEX_COORD; 
    float3 PixelWPos : TEX_COORD1;
    float3 WNormal : TEX_COORD2;
};

struct PSOutput
{ 
    float4 Color : SV_TARGET;
};

// Note that if separate shader objects are not supported (this is only the case for old GLES3.0 devices), vertex
// shader output variable name must match exactly the name of the pixel shader input variable.
// If the variable has structure type (like in this example), the structure declarations must also be indentical.
void main(in  PSInput  PSIn,
          out PSOutput PSOut)
{    
    float3 show_normal = PSIn.WNormal * 0.5f + float3(1.0f, 1.0f, 1.0f);
    PSOut.Color = float4(show_normal, 1.0f);
}
